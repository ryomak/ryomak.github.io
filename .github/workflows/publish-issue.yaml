name: publish content from GitHub Issue

on:
  issues:
    types: [labeled, reopened]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check issue labels
        if: contains(github.event.issue.labels.*.name, 'publish') != true
        run: exit 0
      - name: Define date and file name
        id: define_date_and_filename
        run: |
          date=$(date +%Y%m%d)
          issue_id=${{ github.event.issue.number }}
          title=${{ github.event.issue.title }}
          filename="${date}_${issue_id}.md"
          branch_name="${date}_${issue_id}"
          echo "filename=$filename" >> $GITHUB_OUTPUT
          echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
          echo "title=$title" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT
      - name: Generate Description with OpenAI API
        id: generate_description
        run: |
          issue_body="$(echo "$ISSUE_BODY" | tr -d '\r\n')"
          description=$(curl -s -X POST "https://api.openai.com/v1/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{\"model\": \"text-davinci-003\", \"prompt\": \"Summarize the following text in around 30 characters: $issue_body\", \"max_tokens\": 30}" | jq -r '.choices[0].text' | tr -d '\r\n')
          echo "description=$description" >> $GITHUB_OUTPUT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ISSUE_BODY: "${{ github.event.issue.body }}"
      - name: Create or Update Content File
        run: |
          content="$(echo "$ISSUE_BODY" | tr -d '\r\n' | sed -r "s/published: [0-9]{4}-[0-9]{2}-[0-9]{2}/published: $DATE/" | sed -r "s/title: .*/title: '$TITLE'/" | sed -r "s/description: .*/description: '$DESCRIPTION'/")"
          filepath=src/content/posts/$FILENAME
          echo -e "$content" > $filepath
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_BODY: "${{ github.event.issue.body }}"
          DATE: "${{ steps.define_date_and_filename.outputs.date }}"
          TITLE: "${{ steps.define_date_and_filename.outputs.title }}"
          DESCRIPTION: "${{ steps.generate_description.outputs.description }}"
          FILENAME: "${{ steps.define_date_and_filename.outputs.filename }}"
      - name: Check for Changes
        run: |
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
      - name: Commit Content File
        uses: EndBug/add-and-commit@v9
        with:
          branch: ${{ steps.define_date_and_filename.outputs.branch_name }}
          message: "Update content from issue #${{ github.event.issue.number }}"
          default_author: github_actions
      - name: Create or Update Pull Request
        run: |
          pr_number=$(gh pr view $BRANCH_NAME --json number --jq '.number' || echo "")
          if [ -n "$pr_number" ]; then
            pr_state=$(gh pr view $pr_number --json state --jq '.state')
            if [ "$pr_state" = "CLOSED" ]; then
              gh pr reopen $pr_number
            fi
            gh pr edit $pr_number --title "$TITLE" --body "#$ISSUE_ID"
          else
            gh pr create --title "$TITLE" --body "#$ISSUE_ID" --base main --head "$BRANCH_NAME"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: "${{ steps.define_date_and_filename.outputs.branch_name }}"
          TITLE: "${{ steps.define_date_and_filename.outputs.title }}"
          ISSUE_ID: "${{ github.event.issue.number }}"
      - name: Close Issue
        run: gh issue close $ISSUE_ID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_ID: "${{ github.event.issue.number }}"
